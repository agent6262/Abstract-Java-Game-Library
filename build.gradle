import org.gradle.internal.os.OperatingSystem

plugins {
    id "com.github.hierynomus.license" version "0.14.0"
    id "com.jfrog.artifactory" version "4.5.2"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
//apply plugin: 'application'

version = '1.0.2'
group = 'org.ajgl'
archivesBaseName = 'AJGL'

//mainClassName = 'org.ajgl.Launcher'

project.ext.rlgMavenUser = hasProperty('rlgMavenUser') ? rlgMavenUser : System.getenv('rlgMavenUser')
project.ext.rlgMavenPassword = hasProperty('rlgMavenPassword') ? rlgMavenPassword : System.getenv('rlgMavenPassword')

project.ext.lwjglVersion = "3.1.2"
project.ext.jomlVersion = "1.9.6"

switch (OperatingSystem.current()) {
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
}

repositories {
    mavenCentral()
}

jar {
    baseName = archivesBaseName
    version =  version
}

configurations {
    quality
}

sourceSets {
    quality {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

dependencies {
    compile "org.lwjgl:lwjgl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-openal:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-opencl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-stb:${lwjglVersion}"
    compile "org.joml:joml:${jomlVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.0'

    testCompile 'junit:junit:4.12'

    runtime "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
    runtime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${lwjglNatives}"
    runtime "org.lwjgl:lwjgl-openal:${lwjglVersion}:${lwjglNatives}"
    runtime "org.lwjgl:lwjgl-opengl:${lwjglVersion}:${lwjglNatives}"
    runtime "org.lwjgl:lwjgl-stb:${lwjglVersion}:${lwjglNatives}"
    runtime "org.joml:joml:${jomlVersion}"
    runtime group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.0'

    qualityCompile "org.lwjgl:lwjgl:${lwjglVersion}"
    qualityCompile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
    qualityCompile "org.lwjgl:lwjgl-openal:${lwjglVersion}"
    qualityCompile "org.lwjgl:lwjgl-opencl:${lwjglVersion}"
    qualityCompile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
    qualityCompile "org.lwjgl:lwjgl-stb:${lwjglVersion}"
    qualityCompile "org.joml:joml:${jomlVersion}"
    qualityCompile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.0'
    qualityCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.0'

    qualityRuntime "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
    qualityRuntime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${lwjglNatives}"
    qualityRuntime "org.lwjgl:lwjgl-openal:${lwjglVersion}:${lwjglNatives}"
    qualityRuntime "org.lwjgl:lwjgl-opengl:${lwjglVersion}:${lwjglNatives}"
    qualityRuntime "org.lwjgl:lwjgl-stb:${lwjglVersion}:${lwjglNatives}"
    qualityRuntime "org.joml:joml:${jomlVersion}"
    qualityRuntime group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.0'
}

license {
    excludes(["**/Vector??c.java", "**/Quaternion?c.java", "**/Matrix??c.java"])
    header project.file("LICENSE.txt")
    strictCheck true
    mapping {
        java='SLASHSTAR_STYLE'
    }
}

task qualityJar(type: Jar) {
    baseName = archivesBaseName + "_quality"
    version =  version
    from sourceSets.quality.output
}

task qualityExecute(type: JavaExec) {
    main = 'org.ajgl.Launcher'
    classpath = qualityJar.outputs.files + sourceSets.quality.runtimeClasspath
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

artifactory {
    contextUrl = 'https://reallifegames.net/artifactory/'
    publish {
        repository {
            repoKey = 'gradle-release-local'
            username = "${rlgMavenUser}"
            password = "${rlgMavenPassword}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "${group}"
            artifactId "${archivesBaseName}"
            version "${version}"
            from components.java

            artifact (sourcesJar) {
                classifier "sources"
            }
            artifact (javadocJar) {
                classifier "javadoc"
            }
        }
    }
}